
/* !!! This is code generated by Prisma. Do not edit directly. !!!
/* eslint-disable */

Object.defineProperty(exports, "__esModule", { value: true });

const {
  PrismaClientKnownRequestError,
  PrismaClientUnknownRequestError,
  PrismaClientRustPanicError,
  PrismaClientInitializationError,
  PrismaClientValidationError,
  getPrismaClient,
  sqltag,
  empty,
  join,
  raw,
  skip,
  Decimal,
  Debug,
  objectEnumValues,
  makeStrictEnum,
  Extensions,
  warnOnce,
  defineDmmfProperty,
  Public,
  getRuntime,
  createParam,
} = require('./runtime/wasm-engine-edge.js')


const Prisma = {}

exports.Prisma = Prisma
exports.$Enums = {}

/**
 * Prisma Client JS version: 6.12.0
 * Query Engine version: 8047c96bbd92db98a2abc7c9323ce77c02c89dbc
 */
Prisma.prismaVersion = {
  client: "6.12.0",
  engine: "8047c96bbd92db98a2abc7c9323ce77c02c89dbc"
}

Prisma.PrismaClientKnownRequestError = PrismaClientKnownRequestError;
Prisma.PrismaClientUnknownRequestError = PrismaClientUnknownRequestError
Prisma.PrismaClientRustPanicError = PrismaClientRustPanicError
Prisma.PrismaClientInitializationError = PrismaClientInitializationError
Prisma.PrismaClientValidationError = PrismaClientValidationError
Prisma.Decimal = Decimal

/**
 * Re-export of sql-template-tag
 */
Prisma.sql = sqltag
Prisma.empty = empty
Prisma.join = join
Prisma.raw = raw
Prisma.validator = Public.validator

/**
* Extensions
*/
Prisma.getExtensionContext = Extensions.getExtensionContext
Prisma.defineExtension = Extensions.defineExtension

/**
 * Shorthand utilities for JSON filtering
 */
Prisma.DbNull = objectEnumValues.instances.DbNull
Prisma.JsonNull = objectEnumValues.instances.JsonNull
Prisma.AnyNull = objectEnumValues.instances.AnyNull

Prisma.NullTypes = {
  DbNull: objectEnumValues.classes.DbNull,
  JsonNull: objectEnumValues.classes.JsonNull,
  AnyNull: objectEnumValues.classes.AnyNull
}





/**
 * Enums
 */
exports.Prisma.TransactionIsolationLevel = makeStrictEnum({
  ReadUncommitted: 'ReadUncommitted',
  ReadCommitted: 'ReadCommitted',
  RepeatableRead: 'RepeatableRead',
  Serializable: 'Serializable'
});

exports.Prisma.ProfileScalarFieldEnum = {
  id: 'id',
  email: 'email',
  fullName: 'fullName',
  userType: 'userType',
  avatar: 'avatar',
  bio: 'bio',
  phone: 'phone',
  location: 'location',
  website: 'website',
  verified: 'verified',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt'
};

exports.Prisma.VolunteerScalarFieldEnum = {
  id: 'id',
  profileId: 'profileId',
  languages: 'languages',
  experience: 'experience',
  education: 'education',
  certifications: 'certifications',
  totalHours: 'totalHours',
  impactScore: 'impactScore',
  completedTasks: 'completedTasks',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt'
};

exports.Prisma.OrganizationScalarFieldEnum = {
  id: 'id',
  profileId: 'profileId',
  organizationName: 'organizationName',
  organizationType: 'organizationType',
  registrationNumber: 'registrationNumber',
  description: 'description',
  focusAreas: 'focusAreas',
  operatingRegions: 'operatingRegions',
  totalRequests: 'totalRequests',
  activeVolunteers: 'activeVolunteers',
  completedProjects: 'completedProjects',
  averageRating: 'averageRating',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt'
};

exports.Prisma.OpportunityScalarFieldEnum = {
  id: 'id',
  organizationId: 'organizationId',
  title: 'title',
  description: 'description',
  category: 'category',
  type: 'type',
  urgency: 'urgency',
  skillsNeeded: 'skillsNeeded',
  timeCommitment: 'timeCommitment',
  location: 'location',
  isRemote: 'isRemote',
  requirements: 'requirements',
  benefits: 'benefits',
  startDate: 'startDate',
  endDate: 'endDate',
  maxVolunteers: 'maxVolunteers',
  status: 'status',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt'
};

exports.Prisma.VolunteerSkillScalarFieldEnum = {
  id: 'id',
  volunteerId: 'volunteerId',
  category: 'category',
  name: 'name',
  level: 'level',
  verified: 'verified',
  createdAt: 'createdAt'
};

exports.Prisma.VolunteerAvailabilityScalarFieldEnum = {
  id: 'id',
  volunteerId: 'volunteerId',
  dayOfWeek: 'dayOfWeek',
  startTime: 'startTime',
  endTime: 'endTime',
  timezone: 'timezone',
  createdAt: 'createdAt'
};

exports.Prisma.ApplicationScalarFieldEnum = {
  id: 'id',
  opportunityId: 'opportunityId',
  volunteerId: 'volunteerId',
  organizationId: 'organizationId',
  coverLetter: 'coverLetter',
  status: 'status',
  appliedAt: 'appliedAt',
  reviewedAt: 'reviewedAt'
};

exports.Prisma.AssignmentScalarFieldEnum = {
  id: 'id',
  applicationId: 'applicationId',
  opportunityId: 'opportunityId',
  volunteerId: 'volunteerId',
  organizationId: 'organizationId',
  status: 'status',
  hoursLogged: 'hoursLogged',
  startDate: 'startDate',
  endDate: 'endDate',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt'
};

exports.Prisma.SessionScalarFieldEnum = {
  id: 'id',
  assignmentId: 'assignmentId',
  scheduledAt: 'scheduledAt',
  duration: 'duration',
  status: 'status',
  notes: 'notes',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt'
};

exports.Prisma.ReviewScalarFieldEnum = {
  id: 'id',
  assignmentId: 'assignmentId',
  reviewerId: 'reviewerId',
  revieweeId: 'revieweeId',
  rating: 'rating',
  comment: 'comment',
  createdAt: 'createdAt'
};

exports.Prisma.MessageScalarFieldEnum = {
  id: 'id',
  senderId: 'senderId',
  receiverId: 'receiverId',
  subject: 'subject',
  content: 'content',
  isRead: 'isRead',
  createdAt: 'createdAt'
};

exports.Prisma.SortOrder = {
  asc: 'asc',
  desc: 'desc'
};

exports.Prisma.QueryMode = {
  default: 'default',
  insensitive: 'insensitive'
};

exports.Prisma.NullsOrder = {
  first: 'first',
  last: 'last'
};
exports.UserType = exports.$Enums.UserType = {
  VOLUNTEER: 'VOLUNTEER',
  ORGANIZATION: 'ORGANIZATION'
};

exports.OpportunityCategory = exports.$Enums.OpportunityCategory = {
  MEDICAL: 'MEDICAL',
  MENTAL_HEALTH: 'MENTAL_HEALTH',
  EDUCATION: 'EDUCATION',
  EMERGENCY: 'EMERGENCY',
  LOGISTICS: 'LOGISTICS',
  LEGAL: 'LEGAL',
  TECHNOLOGY: 'TECHNOLOGY',
  FUNDRAISING: 'FUNDRAISING',
  OTHER: 'OTHER'
};

exports.OpportunityType = exports.$Enums.OpportunityType = {
  REMOTE: 'REMOTE',
  ON_SITE: 'ON_SITE',
  HYBRID: 'HYBRID'
};

exports.UrgencyLevel = exports.$Enums.UrgencyLevel = {
  LOW: 'LOW',
  MEDIUM: 'MEDIUM',
  HIGH: 'HIGH',
  CRITICAL: 'CRITICAL'
};

exports.OpportunityStatus = exports.$Enums.OpportunityStatus = {
  DRAFT: 'DRAFT',
  ACTIVE: 'ACTIVE',
  PAUSED: 'PAUSED',
  CLOSED: 'CLOSED',
  COMPLETED: 'COMPLETED'
};

exports.SkillCategory = exports.$Enums.SkillCategory = {
  MEDICAL: 'MEDICAL',
  MENTAL_HEALTH: 'MENTAL_HEALTH',
  EDUCATION: 'EDUCATION',
  TECHNOLOGY: 'TECHNOLOGY',
  LEGAL: 'LEGAL',
  LOGISTICS: 'LOGISTICS',
  COMMUNICATION: 'COMMUNICATION',
  MANAGEMENT: 'MANAGEMENT',
  OTHER: 'OTHER'
};

exports.SkillLevel = exports.$Enums.SkillLevel = {
  BEGINNER: 'BEGINNER',
  INTERMEDIATE: 'INTERMEDIATE',
  ADVANCED: 'ADVANCED',
  EXPERT: 'EXPERT'
};

exports.ApplicationStatus = exports.$Enums.ApplicationStatus = {
  PENDING: 'PENDING',
  REVIEWING: 'REVIEWING',
  ACCEPTED: 'ACCEPTED',
  REJECTED: 'REJECTED',
  WITHDRAWN: 'WITHDRAWN'
};

exports.AssignmentStatus = exports.$Enums.AssignmentStatus = {
  ACTIVE: 'ACTIVE',
  ON_HOLD: 'ON_HOLD',
  COMPLETED: 'COMPLETED',
  CANCELLED: 'CANCELLED'
};

exports.SessionStatus = exports.$Enums.SessionStatus = {
  SCHEDULED: 'SCHEDULED',
  IN_PROGRESS: 'IN_PROGRESS',
  COMPLETED: 'COMPLETED',
  CANCELLED: 'CANCELLED',
  NO_SHOW: 'NO_SHOW'
};

exports.Prisma.ModelName = {
  Profile: 'Profile',
  Volunteer: 'Volunteer',
  Organization: 'Organization',
  Opportunity: 'Opportunity',
  VolunteerSkill: 'VolunteerSkill',
  VolunteerAvailability: 'VolunteerAvailability',
  Application: 'Application',
  Assignment: 'Assignment',
  Session: 'Session',
  Review: 'Review',
  Message: 'Message'
};
/**
 * Create the Client
 */
const config = {
  "generator": {
    "name": "client",
    "provider": {
      "fromEnvVar": null,
      "value": "prisma-client-js"
    },
    "output": {
      "value": "C:\\Users\\PMLS\\Documents\\Web-Dev\\solidarity-forum\\src\\generated\\prisma",
      "fromEnvVar": null
    },
    "config": {
      "engineType": "library"
    },
    "binaryTargets": [
      {
        "fromEnvVar": null,
        "value": "windows",
        "native": true
      }
    ],
    "previewFeatures": [
      "driverAdapters"
    ],
    "sourceFilePath": "C:\\Users\\PMLS\\Documents\\Web-Dev\\solidarity-forum\\prisma\\schema.prisma",
    "isCustomOutput": true
  },
  "relativeEnvPaths": {
    "rootEnvPath": null,
    "schemaEnvPath": "../../../.env"
  },
  "relativePath": "../../../prisma",
  "clientVersion": "6.12.0",
  "engineVersion": "8047c96bbd92db98a2abc7c9323ce77c02c89dbc",
  "datasourceNames": [
    "db"
  ],
  "activeProvider": "postgresql",
  "inlineDatasources": {
    "db": {
      "url": {
        "fromEnvVar": "DATABASE_URL",
        "value": null
      }
    }
  },
  "inlineSchema": "// This is your Prisma schema file,\n// learn more about it in the docs: https://pris.ly/d/prisma-schema\n\n// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?\n// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init\n\ngenerator client {\n  provider        = \"prisma-client-js\"\n  output          = \"../src/generated/prisma\"\n  previewFeatures = [\"driverAdapters\"]\n}\n\ndatasource db {\n  provider  = \"postgresql\"\n  url       = env(\"DATABASE_URL\")\n  directUrl = env(\"DIRECT_URL\")\n}\n\n// User profiles extending Supabase auth\nmodel Profile {\n  id        String   @id @db.Uuid\n  email     String   @unique\n  fullName  String   @map(\"full_name\")\n  userType  UserType @map(\"user_type\")\n  avatar    String?\n  bio       String?\n  phone     String?\n  location  String?\n  website   String?\n  verified  Boolean  @default(false)\n  createdAt DateTime @default(now()) @map(\"created_at\")\n  updatedAt DateTime @updatedAt @map(\"updated_at\")\n\n  volunteer        Volunteer?\n  organization     Organization?\n  sentMessages     Message[]     @relation(\"MessageSender\")\n  receivedMessages Message[]     @relation(\"MessageReceiver\")\n\n  @@map(\"profiles\")\n}\n\nmodel Volunteer {\n  id        String  @id @default(uuid()) @db.Uuid\n  profileId String  @unique @map(\"profile_id\") @db.Uuid\n  profile   Profile @relation(fields: [profileId], references: [id], onDelete: Cascade)\n\n  skills         VolunteerSkill[]\n  availability   VolunteerAvailability[]\n  languages      String[]\n  experience     String?\n  education      String?\n  certifications String[]\n\n  totalHours     Int   @default(0) @map(\"total_hours\")\n  impactScore    Float @default(0.0) @map(\"impact_score\")\n  completedTasks Int   @default(0) @map(\"completed_tasks\")\n\n  applications    Application[]\n  assignments     Assignment[]\n  reviewsReceived Review[]      @relation(\"VolunteerReviewsReceived\")\n  reviewsGiven    Review[]      @relation(\"VolunteerReviewsGiven\")\n\n  createdAt DateTime @default(now()) @map(\"created_at\")\n  updatedAt DateTime @updatedAt @map(\"updated_at\")\n\n  @@map(\"volunteers\")\n}\n\nmodel Organization {\n  id        String  @id @default(uuid()) @db.Uuid\n  profileId String  @unique @map(\"profile_id\") @db.Uuid\n  profile   Profile @relation(fields: [profileId], references: [id], onDelete: Cascade)\n\n  organizationName   String   @map(\"organization_name\")\n  organizationType   String   @map(\"organization_type\")\n  registrationNumber String?  @map(\"registration_number\")\n  description        String?\n  focusAreas         String[] @map(\"focus_areas\")\n  operatingRegions   String[] @map(\"operating_regions\")\n\n  totalRequests     Int   @default(0) @map(\"total_requests\")\n  activeVolunteers  Int   @default(0) @map(\"active_volunteers\")\n  completedProjects Int   @default(0) @map(\"completed_projects\")\n  averageRating     Float @default(0.0) @map(\"average_rating\")\n\n  opportunities   Opportunity[]\n  applications    Application[]\n  assignments     Assignment[]\n  reviewsReceived Review[]      @relation(\"OrgReviewsReceived\")\n  reviewsGiven    Review[]      @relation(\"OrgReviewsGiven\")\n\n  createdAt DateTime @default(now()) @map(\"created_at\")\n  updatedAt DateTime @updatedAt @map(\"updated_at\")\n\n  @@map(\"organizations\")\n}\n\nmodel Opportunity {\n  id             String       @id @default(uuid()) @db.Uuid\n  organizationId String       @map(\"organization_id\") @db.Uuid\n  organization   Organization @relation(fields: [organizationId], references: [id], onDelete: Cascade)\n\n  title       String\n  description String\n  category    OpportunityCategory\n  type        OpportunityType\n  urgency     UrgencyLevel\n\n  skillsNeeded   String[] @map(\"skills_needed\")\n  timeCommitment String   @map(\"time_commitment\")\n  location       String\n  isRemote       Boolean  @default(false) @map(\"is_remote\")\n\n  requirements String?\n  benefits     String?\n  startDate    DateTime? @map(\"start_date\")\n  endDate      DateTime? @map(\"end_date\")\n\n  maxVolunteers Int               @default(1) @map(\"max_volunteers\")\n  status        OpportunityStatus @default(ACTIVE)\n\n  applications Application[]\n  assignments  Assignment[]\n\n  createdAt DateTime @default(now()) @map(\"created_at\")\n  updatedAt DateTime @updatedAt @map(\"updated_at\")\n\n  @@map(\"opportunities\")\n}\n\nmodel VolunteerSkill {\n  id          String    @id @default(uuid()) @db.Uuid\n  volunteerId String    @map(\"volunteer_id\") @db.Uuid\n  volunteer   Volunteer @relation(fields: [volunteerId], references: [id], onDelete: Cascade)\n\n  category SkillCategory\n  name     String\n  level    SkillLevel\n  verified Boolean       @default(false)\n\n  createdAt DateTime @default(now()) @map(\"created_at\")\n\n  @@unique([volunteerId, category, name])\n  @@map(\"volunteer_skills\")\n}\n\nmodel VolunteerAvailability {\n  id          String    @id @default(uuid()) @db.Uuid\n  volunteerId String    @map(\"volunteer_id\") @db.Uuid\n  volunteer   Volunteer @relation(fields: [volunteerId], references: [id], onDelete: Cascade)\n\n  dayOfWeek Int    @map(\"day_of_week\") // 0 = Sunday, 1 = Monday, etc.\n  startTime String @map(\"start_time\") // Format: \"HH:mm\"\n  endTime   String @map(\"end_time\") // Format: \"HH:mm\"\n  timezone  String @default(\"UTC\")\n\n  createdAt DateTime @default(now()) @map(\"created_at\")\n\n  @@map(\"volunteer_availability\")\n}\n\nmodel Application {\n  id             String       @id @default(uuid()) @db.Uuid\n  opportunityId  String       @map(\"opportunity_id\") @db.Uuid\n  opportunity    Opportunity  @relation(fields: [opportunityId], references: [id], onDelete: Cascade)\n  volunteerId    String       @map(\"volunteer_id\") @db.Uuid\n  volunteer      Volunteer    @relation(fields: [volunteerId], references: [id], onDelete: Cascade)\n  organizationId String       @map(\"organization_id\") @db.Uuid\n  organization   Organization @relation(fields: [organizationId], references: [id], onDelete: Cascade)\n\n  coverLetter String?           @map(\"cover_letter\")\n  status      ApplicationStatus @default(PENDING)\n\n  appliedAt  DateTime  @default(now()) @map(\"applied_at\")\n  reviewedAt DateTime? @map(\"reviewed_at\")\n\n  assignment Assignment?\n\n  @@unique([opportunityId, volunteerId])\n  @@map(\"applications\")\n}\n\nmodel Assignment {\n  id             String       @id @default(uuid()) @db.Uuid\n  applicationId  String       @unique @map(\"application_id\") @db.Uuid\n  application    Application  @relation(fields: [applicationId], references: [id], onDelete: Cascade)\n  opportunityId  String       @map(\"opportunity_id\") @db.Uuid\n  opportunity    Opportunity  @relation(fields: [opportunityId], references: [id], onDelete: Cascade)\n  volunteerId    String       @map(\"volunteer_id\") @db.Uuid\n  volunteer      Volunteer    @relation(fields: [volunteerId], references: [id], onDelete: Cascade)\n  organizationId String       @map(\"organization_id\") @db.Uuid\n  organization   Organization @relation(fields: [organizationId], references: [id], onDelete: Cascade)\n\n  status      AssignmentStatus @default(ACTIVE)\n  hoursLogged Int              @default(0) @map(\"hours_logged\")\n  startDate   DateTime         @default(now()) @map(\"start_date\")\n  endDate     DateTime?        @map(\"end_date\")\n\n  sessions Session[]\n  reviews  Review[]\n\n  createdAt DateTime @default(now()) @map(\"created_at\")\n  updatedAt DateTime @updatedAt @map(\"updated_at\")\n\n  @@map(\"assignments\")\n}\n\nmodel Session {\n  id           String     @id @default(uuid()) @db.Uuid\n  assignmentId String     @map(\"assignment_id\") @db.Uuid\n  assignment   Assignment @relation(fields: [assignmentId], references: [id], onDelete: Cascade)\n\n  scheduledAt DateTime      @map(\"scheduled_at\")\n  duration    Int // Duration in minutes\n  status      SessionStatus @default(SCHEDULED)\n  notes       String?\n\n  createdAt DateTime @default(now()) @map(\"created_at\")\n  updatedAt DateTime @updatedAt @map(\"updated_at\")\n\n  @@map(\"sessions\")\n}\n\nmodel Review {\n  id           String     @id @default(uuid()) @db.Uuid\n  assignmentId String     @map(\"assignment_id\") @db.Uuid\n  assignment   Assignment @relation(fields: [assignmentId], references: [id], onDelete: Cascade)\n\n  reviewerId String @map(\"reviewer_id\") @db.Uuid\n  revieweeId String @map(\"reviewee_id\") @db.Uuid\n\n  reviewerVolunteer Volunteer? @relation(\"VolunteerReviewsGiven\", fields: [reviewerId], references: [id], onDelete: Cascade, map: \"fk_reviewer_vol\")\n  revieweeVolunteer Volunteer? @relation(\"VolunteerReviewsReceived\", fields: [revieweeId], references: [id], onDelete: Cascade, map: \"fk_reviewee_vol\")\n\n  reviewerOrganization Organization? @relation(\"OrgReviewsGiven\", fields: [reviewerId], references: [id], onDelete: Cascade, map: \"fk_reviewer_org\")\n  revieweeOrganization Organization? @relation(\"OrgReviewsReceived\", fields: [revieweeId], references: [id], onDelete: Cascade, map: \"fk_reviewee_org\")\n\n  rating  Int\n  comment String?\n\n  createdAt DateTime @default(now()) @map(\"created_at\")\n\n  @@map(\"reviews\")\n}\n\nmodel Message {\n  id         String  @id @default(uuid()) @db.Uuid\n  senderId   String  @map(\"sender_id\") @db.Uuid\n  sender     Profile @relation(\"MessageSender\", fields: [senderId], references: [id], onDelete: Cascade)\n  receiverId String  @map(\"receiver_id\") @db.Uuid\n  receiver   Profile @relation(\"MessageReceiver\", fields: [receiverId], references: [id], onDelete: Cascade)\n\n  subject String?\n  content String\n  isRead  Boolean @default(false) @map(\"is_read\")\n\n  createdAt DateTime @default(now()) @map(\"created_at\")\n\n  @@map(\"messages\")\n}\n\n// Enums\nenum UserType {\n  VOLUNTEER\n  ORGANIZATION\n}\n\nenum OpportunityCategory {\n  MEDICAL\n  MENTAL_HEALTH\n  EDUCATION\n  EMERGENCY\n  LOGISTICS\n  LEGAL\n  TECHNOLOGY\n  FUNDRAISING\n  OTHER\n}\n\nenum OpportunityType {\n  REMOTE\n  ON_SITE\n  HYBRID\n}\n\nenum UrgencyLevel {\n  LOW\n  MEDIUM\n  HIGH\n  CRITICAL\n}\n\nenum OpportunityStatus {\n  DRAFT\n  ACTIVE\n  PAUSED\n  CLOSED\n  COMPLETED\n}\n\nenum SkillCategory {\n  MEDICAL\n  MENTAL_HEALTH\n  EDUCATION\n  TECHNOLOGY\n  LEGAL\n  LOGISTICS\n  COMMUNICATION\n  MANAGEMENT\n  OTHER\n}\n\nenum SkillLevel {\n  BEGINNER\n  INTERMEDIATE\n  ADVANCED\n  EXPERT\n}\n\nenum ApplicationStatus {\n  PENDING\n  REVIEWING\n  ACCEPTED\n  REJECTED\n  WITHDRAWN\n}\n\nenum AssignmentStatus {\n  ACTIVE\n  ON_HOLD\n  COMPLETED\n  CANCELLED\n}\n\nenum SessionStatus {\n  SCHEDULED\n  IN_PROGRESS\n  COMPLETED\n  CANCELLED\n  NO_SHOW\n}\n",
  "inlineSchemaHash": "bfdb87e6563bd594931a2ba7fe280690d532e5177e1df60c0eba18ccf1a73d28",
  "copyEngine": true
}
config.dirname = '/'

config.runtimeDataModel = JSON.parse("{\"models\":{\"Profile\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"email\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"fullName\",\"kind\":\"scalar\",\"type\":\"String\",\"dbName\":\"full_name\"},{\"name\":\"userType\",\"kind\":\"enum\",\"type\":\"UserType\",\"dbName\":\"user_type\"},{\"name\":\"avatar\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"bio\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"phone\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"location\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"website\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"verified\",\"kind\":\"scalar\",\"type\":\"Boolean\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\",\"dbName\":\"created_at\"},{\"name\":\"updatedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\",\"dbName\":\"updated_at\"},{\"name\":\"volunteer\",\"kind\":\"object\",\"type\":\"Volunteer\",\"relationName\":\"ProfileToVolunteer\"},{\"name\":\"organization\",\"kind\":\"object\",\"type\":\"Organization\",\"relationName\":\"OrganizationToProfile\"},{\"name\":\"sentMessages\",\"kind\":\"object\",\"type\":\"Message\",\"relationName\":\"MessageSender\"},{\"name\":\"receivedMessages\",\"kind\":\"object\",\"type\":\"Message\",\"relationName\":\"MessageReceiver\"}],\"dbName\":\"profiles\"},\"Volunteer\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"profileId\",\"kind\":\"scalar\",\"type\":\"String\",\"dbName\":\"profile_id\"},{\"name\":\"profile\",\"kind\":\"object\",\"type\":\"Profile\",\"relationName\":\"ProfileToVolunteer\"},{\"name\":\"skills\",\"kind\":\"object\",\"type\":\"VolunteerSkill\",\"relationName\":\"VolunteerToVolunteerSkill\"},{\"name\":\"availability\",\"kind\":\"object\",\"type\":\"VolunteerAvailability\",\"relationName\":\"VolunteerToVolunteerAvailability\"},{\"name\":\"languages\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"experience\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"education\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"certifications\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"totalHours\",\"kind\":\"scalar\",\"type\":\"Int\",\"dbName\":\"total_hours\"},{\"name\":\"impactScore\",\"kind\":\"scalar\",\"type\":\"Float\",\"dbName\":\"impact_score\"},{\"name\":\"completedTasks\",\"kind\":\"scalar\",\"type\":\"Int\",\"dbName\":\"completed_tasks\"},{\"name\":\"applications\",\"kind\":\"object\",\"type\":\"Application\",\"relationName\":\"ApplicationToVolunteer\"},{\"name\":\"assignments\",\"kind\":\"object\",\"type\":\"Assignment\",\"relationName\":\"AssignmentToVolunteer\"},{\"name\":\"reviewsReceived\",\"kind\":\"object\",\"type\":\"Review\",\"relationName\":\"VolunteerReviewsReceived\"},{\"name\":\"reviewsGiven\",\"kind\":\"object\",\"type\":\"Review\",\"relationName\":\"VolunteerReviewsGiven\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\",\"dbName\":\"created_at\"},{\"name\":\"updatedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\",\"dbName\":\"updated_at\"}],\"dbName\":\"volunteers\"},\"Organization\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"profileId\",\"kind\":\"scalar\",\"type\":\"String\",\"dbName\":\"profile_id\"},{\"name\":\"profile\",\"kind\":\"object\",\"type\":\"Profile\",\"relationName\":\"OrganizationToProfile\"},{\"name\":\"organizationName\",\"kind\":\"scalar\",\"type\":\"String\",\"dbName\":\"organization_name\"},{\"name\":\"organizationType\",\"kind\":\"scalar\",\"type\":\"String\",\"dbName\":\"organization_type\"},{\"name\":\"registrationNumber\",\"kind\":\"scalar\",\"type\":\"String\",\"dbName\":\"registration_number\"},{\"name\":\"description\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"focusAreas\",\"kind\":\"scalar\",\"type\":\"String\",\"dbName\":\"focus_areas\"},{\"name\":\"operatingRegions\",\"kind\":\"scalar\",\"type\":\"String\",\"dbName\":\"operating_regions\"},{\"name\":\"totalRequests\",\"kind\":\"scalar\",\"type\":\"Int\",\"dbName\":\"total_requests\"},{\"name\":\"activeVolunteers\",\"kind\":\"scalar\",\"type\":\"Int\",\"dbName\":\"active_volunteers\"},{\"name\":\"completedProjects\",\"kind\":\"scalar\",\"type\":\"Int\",\"dbName\":\"completed_projects\"},{\"name\":\"averageRating\",\"kind\":\"scalar\",\"type\":\"Float\",\"dbName\":\"average_rating\"},{\"name\":\"opportunities\",\"kind\":\"object\",\"type\":\"Opportunity\",\"relationName\":\"OpportunityToOrganization\"},{\"name\":\"applications\",\"kind\":\"object\",\"type\":\"Application\",\"relationName\":\"ApplicationToOrganization\"},{\"name\":\"assignments\",\"kind\":\"object\",\"type\":\"Assignment\",\"relationName\":\"AssignmentToOrganization\"},{\"name\":\"reviewsReceived\",\"kind\":\"object\",\"type\":\"Review\",\"relationName\":\"OrgReviewsReceived\"},{\"name\":\"reviewsGiven\",\"kind\":\"object\",\"type\":\"Review\",\"relationName\":\"OrgReviewsGiven\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\",\"dbName\":\"created_at\"},{\"name\":\"updatedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\",\"dbName\":\"updated_at\"}],\"dbName\":\"organizations\"},\"Opportunity\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"organizationId\",\"kind\":\"scalar\",\"type\":\"String\",\"dbName\":\"organization_id\"},{\"name\":\"organization\",\"kind\":\"object\",\"type\":\"Organization\",\"relationName\":\"OpportunityToOrganization\"},{\"name\":\"title\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"description\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"category\",\"kind\":\"enum\",\"type\":\"OpportunityCategory\"},{\"name\":\"type\",\"kind\":\"enum\",\"type\":\"OpportunityType\"},{\"name\":\"urgency\",\"kind\":\"enum\",\"type\":\"UrgencyLevel\"},{\"name\":\"skillsNeeded\",\"kind\":\"scalar\",\"type\":\"String\",\"dbName\":\"skills_needed\"},{\"name\":\"timeCommitment\",\"kind\":\"scalar\",\"type\":\"String\",\"dbName\":\"time_commitment\"},{\"name\":\"location\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"isRemote\",\"kind\":\"scalar\",\"type\":\"Boolean\",\"dbName\":\"is_remote\"},{\"name\":\"requirements\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"benefits\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"startDate\",\"kind\":\"scalar\",\"type\":\"DateTime\",\"dbName\":\"start_date\"},{\"name\":\"endDate\",\"kind\":\"scalar\",\"type\":\"DateTime\",\"dbName\":\"end_date\"},{\"name\":\"maxVolunteers\",\"kind\":\"scalar\",\"type\":\"Int\",\"dbName\":\"max_volunteers\"},{\"name\":\"status\",\"kind\":\"enum\",\"type\":\"OpportunityStatus\"},{\"name\":\"applications\",\"kind\":\"object\",\"type\":\"Application\",\"relationName\":\"ApplicationToOpportunity\"},{\"name\":\"assignments\",\"kind\":\"object\",\"type\":\"Assignment\",\"relationName\":\"AssignmentToOpportunity\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\",\"dbName\":\"created_at\"},{\"name\":\"updatedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\",\"dbName\":\"updated_at\"}],\"dbName\":\"opportunities\"},\"VolunteerSkill\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"volunteerId\",\"kind\":\"scalar\",\"type\":\"String\",\"dbName\":\"volunteer_id\"},{\"name\":\"volunteer\",\"kind\":\"object\",\"type\":\"Volunteer\",\"relationName\":\"VolunteerToVolunteerSkill\"},{\"name\":\"category\",\"kind\":\"enum\",\"type\":\"SkillCategory\"},{\"name\":\"name\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"level\",\"kind\":\"enum\",\"type\":\"SkillLevel\"},{\"name\":\"verified\",\"kind\":\"scalar\",\"type\":\"Boolean\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\",\"dbName\":\"created_at\"}],\"dbName\":\"volunteer_skills\"},\"VolunteerAvailability\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"volunteerId\",\"kind\":\"scalar\",\"type\":\"String\",\"dbName\":\"volunteer_id\"},{\"name\":\"volunteer\",\"kind\":\"object\",\"type\":\"Volunteer\",\"relationName\":\"VolunteerToVolunteerAvailability\"},{\"name\":\"dayOfWeek\",\"kind\":\"scalar\",\"type\":\"Int\",\"dbName\":\"day_of_week\"},{\"name\":\"startTime\",\"kind\":\"scalar\",\"type\":\"String\",\"dbName\":\"start_time\"},{\"name\":\"endTime\",\"kind\":\"scalar\",\"type\":\"String\",\"dbName\":\"end_time\"},{\"name\":\"timezone\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\",\"dbName\":\"created_at\"}],\"dbName\":\"volunteer_availability\"},\"Application\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"opportunityId\",\"kind\":\"scalar\",\"type\":\"String\",\"dbName\":\"opportunity_id\"},{\"name\":\"opportunity\",\"kind\":\"object\",\"type\":\"Opportunity\",\"relationName\":\"ApplicationToOpportunity\"},{\"name\":\"volunteerId\",\"kind\":\"scalar\",\"type\":\"String\",\"dbName\":\"volunteer_id\"},{\"name\":\"volunteer\",\"kind\":\"object\",\"type\":\"Volunteer\",\"relationName\":\"ApplicationToVolunteer\"},{\"name\":\"organizationId\",\"kind\":\"scalar\",\"type\":\"String\",\"dbName\":\"organization_id\"},{\"name\":\"organization\",\"kind\":\"object\",\"type\":\"Organization\",\"relationName\":\"ApplicationToOrganization\"},{\"name\":\"coverLetter\",\"kind\":\"scalar\",\"type\":\"String\",\"dbName\":\"cover_letter\"},{\"name\":\"status\",\"kind\":\"enum\",\"type\":\"ApplicationStatus\"},{\"name\":\"appliedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\",\"dbName\":\"applied_at\"},{\"name\":\"reviewedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\",\"dbName\":\"reviewed_at\"},{\"name\":\"assignment\",\"kind\":\"object\",\"type\":\"Assignment\",\"relationName\":\"ApplicationToAssignment\"}],\"dbName\":\"applications\"},\"Assignment\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"applicationId\",\"kind\":\"scalar\",\"type\":\"String\",\"dbName\":\"application_id\"},{\"name\":\"application\",\"kind\":\"object\",\"type\":\"Application\",\"relationName\":\"ApplicationToAssignment\"},{\"name\":\"opportunityId\",\"kind\":\"scalar\",\"type\":\"String\",\"dbName\":\"opportunity_id\"},{\"name\":\"opportunity\",\"kind\":\"object\",\"type\":\"Opportunity\",\"relationName\":\"AssignmentToOpportunity\"},{\"name\":\"volunteerId\",\"kind\":\"scalar\",\"type\":\"String\",\"dbName\":\"volunteer_id\"},{\"name\":\"volunteer\",\"kind\":\"object\",\"type\":\"Volunteer\",\"relationName\":\"AssignmentToVolunteer\"},{\"name\":\"organizationId\",\"kind\":\"scalar\",\"type\":\"String\",\"dbName\":\"organization_id\"},{\"name\":\"organization\",\"kind\":\"object\",\"type\":\"Organization\",\"relationName\":\"AssignmentToOrganization\"},{\"name\":\"status\",\"kind\":\"enum\",\"type\":\"AssignmentStatus\"},{\"name\":\"hoursLogged\",\"kind\":\"scalar\",\"type\":\"Int\",\"dbName\":\"hours_logged\"},{\"name\":\"startDate\",\"kind\":\"scalar\",\"type\":\"DateTime\",\"dbName\":\"start_date\"},{\"name\":\"endDate\",\"kind\":\"scalar\",\"type\":\"DateTime\",\"dbName\":\"end_date\"},{\"name\":\"sessions\",\"kind\":\"object\",\"type\":\"Session\",\"relationName\":\"AssignmentToSession\"},{\"name\":\"reviews\",\"kind\":\"object\",\"type\":\"Review\",\"relationName\":\"AssignmentToReview\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\",\"dbName\":\"created_at\"},{\"name\":\"updatedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\",\"dbName\":\"updated_at\"}],\"dbName\":\"assignments\"},\"Session\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"assignmentId\",\"kind\":\"scalar\",\"type\":\"String\",\"dbName\":\"assignment_id\"},{\"name\":\"assignment\",\"kind\":\"object\",\"type\":\"Assignment\",\"relationName\":\"AssignmentToSession\"},{\"name\":\"scheduledAt\",\"kind\":\"scalar\",\"type\":\"DateTime\",\"dbName\":\"scheduled_at\"},{\"name\":\"duration\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"status\",\"kind\":\"enum\",\"type\":\"SessionStatus\"},{\"name\":\"notes\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\",\"dbName\":\"created_at\"},{\"name\":\"updatedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\",\"dbName\":\"updated_at\"}],\"dbName\":\"sessions\"},\"Review\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"assignmentId\",\"kind\":\"scalar\",\"type\":\"String\",\"dbName\":\"assignment_id\"},{\"name\":\"assignment\",\"kind\":\"object\",\"type\":\"Assignment\",\"relationName\":\"AssignmentToReview\"},{\"name\":\"reviewerId\",\"kind\":\"scalar\",\"type\":\"String\",\"dbName\":\"reviewer_id\"},{\"name\":\"revieweeId\",\"kind\":\"scalar\",\"type\":\"String\",\"dbName\":\"reviewee_id\"},{\"name\":\"reviewerVolunteer\",\"kind\":\"object\",\"type\":\"Volunteer\",\"relationName\":\"VolunteerReviewsGiven\"},{\"name\":\"revieweeVolunteer\",\"kind\":\"object\",\"type\":\"Volunteer\",\"relationName\":\"VolunteerReviewsReceived\"},{\"name\":\"reviewerOrganization\",\"kind\":\"object\",\"type\":\"Organization\",\"relationName\":\"OrgReviewsGiven\"},{\"name\":\"revieweeOrganization\",\"kind\":\"object\",\"type\":\"Organization\",\"relationName\":\"OrgReviewsReceived\"},{\"name\":\"rating\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"comment\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\",\"dbName\":\"created_at\"}],\"dbName\":\"reviews\"},\"Message\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"senderId\",\"kind\":\"scalar\",\"type\":\"String\",\"dbName\":\"sender_id\"},{\"name\":\"sender\",\"kind\":\"object\",\"type\":\"Profile\",\"relationName\":\"MessageSender\"},{\"name\":\"receiverId\",\"kind\":\"scalar\",\"type\":\"String\",\"dbName\":\"receiver_id\"},{\"name\":\"receiver\",\"kind\":\"object\",\"type\":\"Profile\",\"relationName\":\"MessageReceiver\"},{\"name\":\"subject\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"content\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"isRead\",\"kind\":\"scalar\",\"type\":\"Boolean\",\"dbName\":\"is_read\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\",\"dbName\":\"created_at\"}],\"dbName\":\"messages\"}},\"enums\":{},\"types\":{}}")
defineDmmfProperty(exports.Prisma, config.runtimeDataModel)
config.engineWasm = {
  getRuntime: async () => require('./query_engine_bg.js'),
  getQueryEngineWasmModule: async () => {
    const loader = (await import('#wasm-engine-loader')).default
    const engine = (await loader).default
    return engine
  }
}
config.compilerWasm = undefined

config.injectableEdgeEnv = () => ({
  parsed: {
    DATABASE_URL: typeof globalThis !== 'undefined' && globalThis['DATABASE_URL'] || typeof process !== 'undefined' && process.env && process.env.DATABASE_URL || undefined
  }
})

if (typeof globalThis !== 'undefined' && globalThis['DEBUG'] || typeof process !== 'undefined' && process.env && process.env.DEBUG || undefined) {
  Debug.enable(typeof globalThis !== 'undefined' && globalThis['DEBUG'] || typeof process !== 'undefined' && process.env && process.env.DEBUG || undefined)
}

const PrismaClient = getPrismaClient(config)
exports.PrismaClient = PrismaClient
Object.assign(exports, Prisma)

